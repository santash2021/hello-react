
name: React CICD

on:
  push:
    branches: [ master ]
 
jobs:
    build:
      name: Build
      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/


      steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
              node-version: ${{ matrix.node-version }}
      - run: npm i
      - run: npm run build 
        
      - name: Checkout repository
        uses: actions/checkout@v2    
      - name: Upload Files
        uses: siva1024/scp-deployer@latest
        with:
             host: ${{ secrets.SSH_HOST }}
             username: ubuntu
             key: ${{ secrets.SSH_PRIVATE_KEY }}
             source: "build"
             target: "~/"
             
      - run: ls
    

     
          
#     - run: ls
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [14.x]
#       # # ## See supported Node.js release schedule at https://nodejs.org/en/about/releases/###

#     steps:
#          - name: ls -a via ssh
#            uses: fifsky/ssh-action@master
#            with:
#              command: |
#                 cd /tmp
#                 ls -a
                
#              host: ${{ secrets.SSH_HOST }}
#              user: ubuntu
#              key: ${{ secrets.SSH_PRIVATE_KEY }}
             
#          - name: copy file via ssh key
#            uses: appleboy/scp-action@master
#            with:
#              host: ${{ secrets.SSH_HOST }}
#              username: ubuntu
#              port: 22
#              key: ${{ secrets.SSH_PRIVATE_KEY }}
#              source: "tests/a.txt,tests/b.txt"
#              target: "tests"
             
 
 
 


#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v2
#       with:
#         node-version: ${{ matrix.node-version }}
#     - run: npm i

#     - run: npm run build

#     steps:
#     - name: Install SSH Key
#       uses: shimataro/ssh-key-action@v2
#       with:
#         key: ${{ secrets.SSH_PRIVATE_KEY }} 
#         if_key_exists: replace
#         known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
#     - name: Adding Known Hosts
#       run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      
      
#     - name: Deploy with rsync
#         echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > key.pem
#       run: ssh -i key.pem ubuntu@ec2-54-171-78-118.eu-west-1.compute.amazonaws.com

   
